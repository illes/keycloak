{
  "apiVersion" : "1",
  "swaggerVersion" : "1.2",
  "basePath" : "http://localhost:8080/auth",
  "resourcePath" : "/Users",
  "apis" : [ {
    "path" : "/admin/realms/{realm}/users",
    "operations" : [ {
      "method" : "POST",
      "nickname" : "createUser",
      "type" : "Response",
      "parameters" : [ {
        "type" : "UserRepresentation",
        "paramType" : "body",
        "name" : "rep",
        "required" : true
      }, {
        "type" : "string",
        "description" : "realm name (not id!)",
        "paramType" : "path",
        "name" : "realm",
        "required" : true
      } ],
      "summary" : "Create a new user\n\n Username must be unique.",
      "consumes" : [ "application/json" ]
    }, {
      "method" : "GET",
      "nickname" : "getUsers",
      "type" : "array",
      "items" : {
        "$ref" : "UserRepresentation"
      },
      "parameters" : [ {
        "type" : "string",
        "description" : "A String contained in username, first or last name, or email",
        "paramType" : "query",
        "name" : "search"
      }, {
        "type" : "string",
        "paramType" : "query",
        "name" : "lastName"
      }, {
        "type" : "string",
        "paramType" : "query",
        "name" : "firstName"
      }, {
        "type" : "string",
        "paramType" : "query",
        "name" : "email"
      }, {
        "type" : "string",
        "paramType" : "query",
        "name" : "username"
      }, {
        "type" : "integer",
        "format" : "int32",
        "paramType" : "query",
        "name" : "first"
      }, {
        "type" : "integer",
        "format" : "int32",
        "description" : "Maximum results size (defaults to 100)",
        "paramType" : "query",
        "name" : "max"
      }, {
        "type" : "string",
        "description" : "realm name (not id!)",
        "paramType" : "path",
        "name" : "realm",
        "required" : true
      } ],
      "summary" : "Get users\n\n Returns a list of users, filtered according to query parameters",
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/admin/realms/{realm}/users/count",
    "operations" : [ {
      "method" : "GET",
      "nickname" : "getUsersCount",
      "type" : "integer",
      "format" : "int32",
      "parameters" : [ {
        "type" : "string",
        "description" : "realm name (not id!)",
        "paramType" : "path",
        "name" : "realm",
        "required" : true
      } ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/admin/realms/{realm}/users/{id}",
    "operations" : [ {
      "method" : "PUT",
      "nickname" : "updateUser",
      "type" : "Response",
      "parameters" : [ {
        "type" : "UserRepresentation",
        "paramType" : "body",
        "name" : "rep",
        "required" : true
      }, {
        "type" : "string",
        "description" : "User id",
        "paramType" : "path",
        "name" : "id",
        "required" : true
      }, {
        "type" : "string",
        "description" : "realm name (not id!)",
        "paramType" : "path",
        "name" : "realm",
        "required" : true
      } ],
      "summary" : "Update the user",
      "consumes" : [ "application/json" ]
    }, {
      "method" : "GET",
      "nickname" : "getUser",
      "type" : "UserRepresentation",
      "parameters" : [ {
        "type" : "string",
        "description" : "User id",
        "paramType" : "path",
        "name" : "id",
        "required" : true
      }, {
        "type" : "string",
        "description" : "realm name (not id!)",
        "paramType" : "path",
        "name" : "realm",
        "required" : true
      } ],
      "summary" : "Get representation of the user",
      "produces" : [ "application/json" ]
    }, {
      "method" : "DELETE",
      "nickname" : "deleteUser",
      "type" : "Response",
      "parameters" : [ {
        "type" : "string",
        "description" : "User id",
        "paramType" : "path",
        "name" : "id",
        "required" : true
      }, {
        "type" : "string",
        "description" : "realm name (not id!)",
        "paramType" : "path",
        "name" : "realm",
        "required" : true
      } ],
      "summary" : "Delete the user"
    } ]
  }, {
    "path" : "/admin/realms/{realm}/users/{id}/consents",
    "operations" : [ {
      "method" : "GET",
      "nickname" : "getConsents",
      "type" : "array",
      "items" : {
        "$ref" : "object"
      },
      "parameters" : [ {
        "type" : "string",
        "description" : "User id",
        "paramType" : "path",
        "name" : "id",
        "required" : true
      }, {
        "type" : "string",
        "description" : "realm name (not id!)",
        "paramType" : "path",
        "name" : "realm",
        "required" : true
      } ],
      "summary" : "Get consents granted by the user",
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/admin/realms/{realm}/users/{id}/consents/{client}",
    "operations" : [ {
      "method" : "DELETE",
      "nickname" : "revokeConsent",
      "type" : "void",
      "parameters" : [ {
        "type" : "string",
        "description" : "Client id",
        "paramType" : "path",
        "name" : "client",
        "required" : true
      }, {
        "type" : "string",
        "description" : "User id",
        "paramType" : "path",
        "name" : "id",
        "required" : true
      }, {
        "type" : "string",
        "description" : "realm name (not id!)",
        "paramType" : "path",
        "name" : "realm",
        "required" : true
      } ],
      "summary" : "Revoke consent and offline tokens for particular client from user"
    } ]
  }, {
    "path" : "/admin/realms/{realm}/users/{id}/disable-credential-types",
    "operations" : [ {
      "method" : "PUT",
      "nickname" : "disableCredentialType",
      "type" : "void",
      "parameters" : [ {
        "type" : "array",
        "items" : {
          "type" : "string"
        },
        "paramType" : "body",
        "name" : "credentialTypes",
        "required" : true
      }, {
        "type" : "string",
        "description" : "User id",
        "paramType" : "path",
        "name" : "id",
        "required" : true
      }, {
        "type" : "string",
        "description" : "realm name (not id!)",
        "paramType" : "path",
        "name" : "realm",
        "required" : true
      } ],
      "summary" : "Disable all credentials for a user of a specific type",
      "consumes" : [ "application/json" ]
    } ]
  }, {
    "path" : "/admin/realms/{realm}/users/{id}/execute-actions-email",
    "operations" : [ {
      "method" : "PUT",
      "nickname" : "executeActionsEmail",
      "type" : "Response",
      "parameters" : [ {
        "type" : "string",
        "description" : "Redirect uri",
        "paramType" : "query",
        "name" : "redirect_uri"
      }, {
        "type" : "string",
        "description" : "Client id",
        "paramType" : "query",
        "name" : "client_id"
      }, {
        "type" : "integer",
        "format" : "int32",
        "description" : "Number of seconds after which the generated token expires",
        "paramType" : "query",
        "name" : "lifespan"
      }, {
        "type" : "array",
        "description" : "required actions the user needs to complete",
        "items" : {
          "type" : "string"
        },
        "paramType" : "body",
        "name" : "actions",
        "required" : true
      }, {
        "type" : "string",
        "description" : "User id",
        "paramType" : "path",
        "name" : "id",
        "required" : true
      }, {
        "type" : "string",
        "description" : "realm name (not id!)",
        "paramType" : "path",
        "name" : "realm",
        "required" : true
      } ],
      "summary" : "Send a update account email to the user\n\n An email contains a link the user can click to perform a set of required actions.",
      "notes" : "The redirectUri and clientId parameters are optional. If no redirect is given, then there will\n be no link back to click after actions have completed.  Redirect uri must be a valid uri for the\n particular clientId.",
      "consumes" : [ "application/json" ]
    } ]
  }, {
    "path" : "/admin/realms/{realm}/users/{id}/federated-identity",
    "operations" : [ {
      "method" : "GET",
      "nickname" : "getFederatedIdentity",
      "type" : "array",
      "items" : {
        "$ref" : "FederatedIdentityRepresentation"
      },
      "parameters" : [ {
        "type" : "string",
        "description" : "User id",
        "paramType" : "path",
        "name" : "id",
        "required" : true
      }, {
        "type" : "string",
        "description" : "realm name (not id!)",
        "paramType" : "path",
        "name" : "realm",
        "required" : true
      } ],
      "summary" : "Get social logins associated with the user",
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/admin/realms/{realm}/users/{id}/federated-identity/{provider}",
    "operations" : [ {
      "method" : "POST",
      "nickname" : "addFederatedIdentity",
      "type" : "Response",
      "parameters" : [ {
        "type" : "string",
        "description" : "Social login provider id",
        "paramType" : "path",
        "name" : "provider",
        "required" : true
      }, {
        "type" : "FederatedIdentityRepresentation",
        "paramType" : "body",
        "name" : "rep",
        "required" : true
      }, {
        "type" : "string",
        "description" : "User id",
        "paramType" : "path",
        "name" : "id",
        "required" : true
      }, {
        "type" : "string",
        "description" : "realm name (not id!)",
        "paramType" : "path",
        "name" : "realm",
        "required" : true
      } ],
      "summary" : "Add a social login provider to the user"
    }, {
      "method" : "DELETE",
      "nickname" : "removeFederatedIdentity",
      "type" : "void",
      "parameters" : [ {
        "type" : "string",
        "description" : "Social login provider id",
        "paramType" : "path",
        "name" : "provider",
        "required" : true
      }, {
        "type" : "string",
        "description" : "User id",
        "paramType" : "path",
        "name" : "id",
        "required" : true
      }, {
        "type" : "string",
        "description" : "realm name (not id!)",
        "paramType" : "path",
        "name" : "realm",
        "required" : true
      } ],
      "summary" : "Remove a social login provider from user"
    } ]
  }, {
    "path" : "/admin/realms/{realm}/users/{id}/groups",
    "operations" : [ {
      "method" : "GET",
      "nickname" : "groupMembership",
      "type" : "array",
      "items" : {
        "$ref" : "GroupRepresentation"
      },
      "parameters" : [ {
        "type" : "string",
        "description" : "User id",
        "paramType" : "path",
        "name" : "id",
        "required" : true
      }, {
        "type" : "string",
        "description" : "realm name (not id!)",
        "paramType" : "path",
        "name" : "realm",
        "required" : true
      } ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/admin/realms/{realm}/users/{id}/groups/{groupId}",
    "operations" : [ {
      "method" : "DELETE",
      "nickname" : "removeMembership",
      "type" : "void",
      "parameters" : [ {
        "type" : "string",
        "paramType" : "path",
        "name" : "groupId",
        "required" : true
      }, {
        "type" : "string",
        "description" : "User id",
        "paramType" : "path",
        "name" : "id",
        "required" : true
      }, {
        "type" : "string",
        "description" : "realm name (not id!)",
        "paramType" : "path",
        "name" : "realm",
        "required" : true
      } ]
    }, {
      "method" : "PUT",
      "nickname" : "joinGroup",
      "type" : "void",
      "parameters" : [ {
        "type" : "string",
        "paramType" : "path",
        "name" : "groupId",
        "required" : true
      }, {
        "type" : "string",
        "description" : "User id",
        "paramType" : "path",
        "name" : "id",
        "required" : true
      }, {
        "type" : "string",
        "description" : "realm name (not id!)",
        "paramType" : "path",
        "name" : "realm",
        "required" : true
      } ]
    } ]
  }, {
    "path" : "/admin/realms/{realm}/users/{id}/impersonation",
    "operations" : [ {
      "method" : "POST",
      "nickname" : "impersonate",
      "type" : "object",
      "parameters" : [ {
        "type" : "string",
        "description" : "User id",
        "paramType" : "path",
        "name" : "id",
        "required" : true
      }, {
        "type" : "string",
        "description" : "realm name (not id!)",
        "paramType" : "path",
        "name" : "realm",
        "required" : true
      } ],
      "summary" : "Impersonate the user",
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/admin/realms/{realm}/users/{id}/logout",
    "operations" : [ {
      "method" : "POST",
      "nickname" : "logout",
      "type" : "void",
      "parameters" : [ {
        "type" : "string",
        "description" : "User id",
        "paramType" : "path",
        "name" : "id",
        "required" : true
      }, {
        "type" : "string",
        "description" : "realm name (not id!)",
        "paramType" : "path",
        "name" : "realm",
        "required" : true
      } ],
      "summary" : "Remove all user sessions associated with the user\n\n Also send notification to all clients that have an admin URL to invalidate the sessions for the particular user."
    } ]
  }, {
    "path" : "/admin/realms/{realm}/users/{id}/offline-sessions/{clientId}",
    "operations" : [ {
      "method" : "GET",
      "nickname" : "getOfflineSessions",
      "type" : "array",
      "items" : {
        "$ref" : "UserSessionRepresentation"
      },
      "parameters" : [ {
        "type" : "string",
        "paramType" : "path",
        "name" : "clientId",
        "required" : true
      }, {
        "type" : "string",
        "description" : "User id",
        "paramType" : "path",
        "name" : "id",
        "required" : true
      }, {
        "type" : "string",
        "description" : "realm name (not id!)",
        "paramType" : "path",
        "name" : "realm",
        "required" : true
      } ],
      "summary" : "Get offline sessions associated with the user and client",
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/admin/realms/{realm}/users/{id}/remove-totp",
    "operations" : [ {
      "method" : "PUT",
      "nickname" : "removeTotp",
      "type" : "void",
      "parameters" : [ {
        "type" : "string",
        "description" : "User id",
        "paramType" : "path",
        "name" : "id",
        "required" : true
      }, {
        "type" : "string",
        "description" : "realm name (not id!)",
        "paramType" : "path",
        "name" : "realm",
        "required" : true
      } ],
      "summary" : "Remove TOTP from the user",
      "consumes" : [ "application/json" ]
    } ]
  }, {
    "path" : "/admin/realms/{realm}/users/{id}/reset-password",
    "operations" : [ {
      "method" : "PUT",
      "nickname" : "resetPassword",
      "type" : "void",
      "parameters" : [ {
        "type" : "CredentialRepresentation",
        "description" : "A Temporary password",
        "paramType" : "body",
        "name" : "pass",
        "required" : true
      }, {
        "type" : "string",
        "description" : "User id",
        "paramType" : "path",
        "name" : "id",
        "required" : true
      }, {
        "type" : "string",
        "description" : "realm name (not id!)",
        "paramType" : "path",
        "name" : "realm",
        "required" : true
      } ],
      "summary" : "Set up a temporary password for the user\n\n User will have to reset the temporary password next time they log in.",
      "consumes" : [ "application/json" ]
    } ]
  }, {
    "path" : "/admin/realms/{realm}/users/{id}/send-verify-email",
    "operations" : [ {
      "method" : "PUT",
      "nickname" : "sendVerifyEmail",
      "type" : "Response",
      "parameters" : [ {
        "type" : "string",
        "description" : "Redirect uri",
        "paramType" : "query",
        "name" : "redirect_uri"
      }, {
        "type" : "string",
        "description" : "Client id",
        "paramType" : "query",
        "name" : "client_id"
      }, {
        "type" : "string",
        "description" : "User id",
        "paramType" : "path",
        "name" : "id",
        "required" : true
      }, {
        "type" : "string",
        "description" : "realm name (not id!)",
        "paramType" : "path",
        "name" : "realm",
        "required" : true
      } ],
      "summary" : "Send an email-verification email to the user\n\n An email contains a link the user can click to verify their email address.",
      "notes" : "The redirectUri and clientId parameters are optional. The default for the\n redirect is the account client.",
      "consumes" : [ "application/json" ]
    } ]
  }, {
    "path" : "/admin/realms/{realm}/users/{id}/sessions",
    "operations" : [ {
      "method" : "GET",
      "nickname" : "getSessions",
      "type" : "array",
      "items" : {
        "$ref" : "UserSessionRepresentation"
      },
      "parameters" : [ {
        "type" : "string",
        "description" : "User id",
        "paramType" : "path",
        "name" : "id",
        "required" : true
      }, {
        "type" : "string",
        "description" : "realm name (not id!)",
        "paramType" : "path",
        "name" : "realm",
        "required" : true
      } ],
      "summary" : "Get sessions associated with the user",
      "produces" : [ "application/json" ]
    } ]
  } ],
  "models" : {
    "CredentialRepresentation" : {
      "id" : "CredentialRepresentation",
      "properties" : {
        "type" : {
          "type" : "string"
        },
        "device" : {
          "type" : "string"
        },
        "value" : {
          "type" : "string"
        },
        "hashedSaltedValue" : {
          "type" : "string"
        },
        "salt" : {
          "type" : "string"
        },
        "hashIterations" : {
          "type" : "integer",
          "format" : "int32"
        },
        "counter" : {
          "type" : "integer",
          "format" : "int32"
        },
        "algorithm" : {
          "type" : "string"
        },
        "digits" : {
          "type" : "integer",
          "format" : "int32"
        },
        "period" : {
          "type" : "integer",
          "format" : "int32"
        },
        "createdDate" : {
          "type" : "integer",
          "format" : "int64"
        },
        "config" : {
          "type" : "MultivaluedHashMap"
        },
        "temporary" : {
          "type" : "boolean"
        }
      }
    },
    "MultivaluedHashMap" : {
      "id" : "MultivaluedHashMap",
      "properties" : {
        "empty" : {
          "type" : "boolean"
        },
        "threshold" : {
          "type" : "integer",
          "format" : "int32"
        },
        "loadFactor" : {
          "type" : "number",
          "format" : "float"
        }
      }
    },
    "UserSessionRepresentation" : {
      "id" : "UserSessionRepresentation",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "username" : {
          "type" : "string"
        },
        "userId" : {
          "type" : "string"
        },
        "ipAddress" : {
          "type" : "string"
        },
        "start" : {
          "type" : "integer",
          "format" : "int64"
        },
        "lastAccess" : {
          "type" : "integer",
          "format" : "int64"
        },
        "clients" : {
          "type" : "object"
        }
      }
    },
    "GroupRepresentation" : {
      "id" : "GroupRepresentation",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "path" : {
          "type" : "string"
        },
        "attributes" : {
          "type" : "object"
        },
        "realmRoles" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "clientRoles" : {
          "type" : "object"
        },
        "subGroups" : {
          "type" : "array",
          "items" : {
            "$ref" : "GroupRepresentation"
          }
        },
        "access" : {
          "type" : "object"
        }
      }
    },
    "FederatedIdentityRepresentation" : {
      "id" : "FederatedIdentityRepresentation",
      "properties" : {
        "identityProvider" : {
          "type" : "string"
        },
        "userId" : {
          "type" : "string"
        },
        "userName" : {
          "type" : "string"
        }
      }
    },
    "UserRepresentation" : {
      "id" : "UserRepresentation",
      "properties" : {
        "self" : {
          "type" : "string"
        },
        "id" : {
          "type" : "string"
        },
        "origin" : {
          "type" : "string"
        },
        "createdTimestamp" : {
          "type" : "integer",
          "format" : "int64"
        },
        "username" : {
          "type" : "string"
        },
        "enabled" : {
          "type" : "boolean"
        },
        "emailVerified" : {
          "type" : "boolean"
        },
        "firstName" : {
          "type" : "string"
        },
        "lastName" : {
          "type" : "string"
        },
        "email" : {
          "type" : "string"
        },
        "federationLink" : {
          "type" : "string"
        },
        "serviceAccountClientId" : {
          "type" : "string"
        },
        "attributes" : {
          "type" : "object"
        },
        "credentials" : {
          "type" : "array",
          "items" : {
            "$ref" : "CredentialRepresentation"
          }
        },
        "disableableCredentialTypes" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "uniqueItems" : true
        },
        "requiredActions" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "federatedIdentities" : {
          "type" : "array",
          "items" : {
            "$ref" : "FederatedIdentityRepresentation"
          }
        },
        "realmRoles" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "clientRoles" : {
          "type" : "object"
        },
        "clientConsents" : {
          "type" : "array",
          "items" : {
            "$ref" : "UserConsentRepresentation"
          }
        },
        "notBefore" : {
          "type" : "integer",
          "format" : "int32"
        },
        "groups" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "access" : {
          "type" : "object"
        }
      }
    },
    "UserConsentRepresentation" : {
      "id" : "UserConsentRepresentation",
      "properties" : {
        "clientId" : {
          "type" : "string"
        },
        "grantedClientScopes" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "createdDate" : {
          "type" : "integer",
          "format" : "int64"
        },
        "lastUpdatedDate" : {
          "type" : "integer",
          "format" : "int64"
        }
      }
    }
  }
}